# *** Welcome to the Fiji launcher's configuration file! ***
#
# The Fiji launcher is built on Jaunch (https://github.com/scijava/jaunch).
#
# There is a general layer of launcher configuration in the jaunch.toml file.
# The contents below define Fiji's particular launcher behavior and features,
# on top of Jaunch's "sensible default" functionality.
#
# See that jaunch.toml file for more details about Jaunch configuration.

# The version of Jaunch with which this configuration file is intended to work.
# Leave this value be, unless you are upgrading from an older version of Jaunch.
jaunch-version = 1

# Name your program here! This name will appear in the usage text.
program-name = "Fiji"

# Runtime classpath elements (e.g. JAR files) to pass to Fiji.
classpath = [
    '--full-classpath|jars/*.jar',
    '--full-classpath|jars/bio-formats/*.jar',
    '--full-classpath|plugins/*.jar',
    '!--full-classpath|jars/imagej-launcher*.jar',
]

# Maximum amount of memory for the Java heap to consume.
max-heap = '75%'

# Fiji-specific launcher options.
supported-options = [
    '--print-ij-dir|print where Fiji thinks it is located',
    "--ij-dir=<path>|set the ImageJ directory to <path> (used to find\njars/, plugins/ and macros/)",
    '--pass-classpath=<classpath>|pass -classpath <classpath> to the main() method',
    '--full-classpath|call the main class with the full ImageJ class path',
    "--default-gc|do not use advanced garbage collector settings by default\n(-XX:+UseG1GC)",
    '--gc-g1|use the G1 garbage collector',
    '--debug-gc|show debug info about the garbage collector on stderr',
    '--no-splash|suppress showing a splash screen upon startup',

    # Options for Fiji:
    '--dont-patch-ij1|do not try to runtime-patch ImageJ (implies --ij1)',
    '--ij2|no effect -- here for backwards compatibility only',
    '--ij1|start in original ImageJ mode',
    '--allow-multiple|do not reuse existing Fiji instance',
    '--plugins=<dir>|use <dir> to discover plugins',
    '--run <plugin> [<arg>]|run <plugin> in Fiji, optionally with arguments',
    '--compile-and-run <path-to-.java-file>|compile and run <plugin> in Fiji',
    '--edit [<file>...]|edit the given file in the script editor',

    # Options to run programs other than Fiji:
    '--update|start the command-line version of the ImageJ updater',
    "--main-class=<class name>|start the given class instead of Fiji\n(this is the default when called with a file ending in .class)",
# Nico: NEED: execute a script with parameters
# ./ImageJ-linux64 --ij2 --headless --console --run hello.py 'name="Mr Kraken"'
]

# Acceptable range of Java versions to match.
version-min = 8
#version-max = 21

# Modes are used as hints for activating arguments to the JVM and main class.
modes = [
  "--dont-patch-ij1|ij1-mode",
  "--dont-patch-ij1|no-ij1-patching",
  "--update|no-ij1-patching",
  "--ij1|ij1-mode",
  "--ij2|!ij1-mode",
  "--ij2|!no-ij1-patching",
]

# Commands that override Jaunch's usual behavior of launching Fiji.
directives = [
  "--print-ij-dir|print-app-dir",
]

# Arguments to pass to the JVM.
jvm-args = [
    '--info|-Dscijava.log.level=info',

    '--debug|-Dij.debug=true',
    '--debug|-Dscijava.log.level=debug',

    # In https://forum.image.sc/t/88620, acardona wrote:
    # > When running in a machine with many CPU cores (like 64, or 256) and lots
    # > of RAM (e.g., more than 100 GB, like 500 GB of heap size as defined by -Xmx),
    # > I find that the concurrent garbage collector (G1 GC) works *a lot better*.
    '!--default-gc|JAVA:6+|-XX:+UseG1GC',
    # Handle --gc-g1 option.
    '--gc-g1|-XX:+UseCompressedOops',
    '--gc-g1|-XX:+UnlockExperimentalVMOptions',
    '--gc-g1|-XX:+UseG1GC',
    '--gc-g1|-XX:NewRatio=5',

    # Handle --headless option.
    '--headless|-Djava.awt.headless=true',

    # Handle --heap / --mem / --memory option.
    '--heap|-Xmx${heap}',

    # Handle --dont-patch-ij1 option.
    'no-ij1-patching|-Dpatch.ij1=false',

    # Handle ij1 mode.
    'ij1-mode|-Dsun.java.command=ImageJ',

    # Enable SciJava logging in updater mode.
    '--update|-Dscijava.log.level=info',

    # Supported since Jigsaw was introduced in Java 9.
    # Necessary for ij1-patcher to work properly with Java 17+.
    'JAVA:9+|--add-opens=java.base/java.lang=ALL-UNNAMED',
    'JAVA:9+|--add-opens=java.base/java.util=ALL-UNNAMED',  # TODO: Why? What triggers this?
    'JAVA:9+|linux*|--add-opens=java.desktop/sun.awt=ALL-UNNAMED',  # TODO: Why? Is this Linux-specific?
    'JAVA:9+|linux*|--add-opens=java.desktop/sun.awt.X11=ALL-UNNAMED',  # TODO: what about Wayland?
    'JAVA:9+|OS:MACOSX|--add-opens=java.desktop/com.apple.eawt=ALL-UNNAMED',

    '-Dpython.cachedir.skip=true',  # Make Jython behave better.
    '-Dplugins.dir=${app-dir}',  # ImageJ cares about this property.
    '!--no-splash|-Dimagej.splash=true',

    '-Dimagej.dir=${app-dir}',
    '-Dij.dir=${app-dir}',
    '-Dfiji.dir=${app-dir}',

    'OS:LINUX|-Dfiji.executable=${app-dir}/fiji',
    'OS:LINUX|-Dij.executable=${app-dir}/fiji',
    'OS:MACOSX|-Dfiji.executable=${app-dir}/Contents/MacOS/fiji',
    'OS:MACOSX|-Dij.executable=${app-dir}/Contents/MacOS/fiji',
    'OS:WINDOWS|-Dfiji.executable=${app-dir}\fiji.exe',
    'OS:WINDOWS|-Dij.executable=${app-dir}\fiji.exe',

    'OS:LINUX|ARCH:X64|-Djava.library.path=${app-dir}/lib/linux64',
    'OS:LINUX|ARCH:X86|-Djava.library.path=${app-dir}/lib/linux32',
    'OS:MACOSX|ARCH:ARM64|-Djava.library.path=${app-dir}/lib/macosx-arm64',
    'OS:MACOSX|ARCH:X64|-Djava.library.path=${app-dir}/lib/macosx',
    'OS:WINDOWS|ARCH:X64|-Djava.library.path=${app-dir}\lib\win64',
    'OS:WINDOWS|ARCH:X86|-Djava.library.path=${app-dir}\lib\win32',

    '-Dscijava.context.strict=false',  # Make SciJava startup less brittle.
    '-Dpython.console.encoding=UTF-8',  # TODO: What is this for?
]

main-class-candidates = [
    '--main-class|${main-class}',
    '--update|net.imagej.updater.CommandLine',
    'net.imagej.launcher.ClassLauncher',
]

main-args = [
    '!ij1-mode|-ijjarpath', 'jars',
    '!ij1-mode|-ijjarpath', 'plugins',
    '!ij1-mode|net.imagej.Main',
    'ij1-mode|-classpath',
    'ij1-mode|jars/ij-*.jar',
    'ij1-mode|ij.ImageJ',
]
