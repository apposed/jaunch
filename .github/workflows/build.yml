name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '21'
        cache: 'gradle'

    - name: Cache Kotlin Native
      id: cache-konan
      uses: actions/cache@v4
      with:
        path: ~/.konan
        key: ${{ runner.os }}-build-konan-${{ hashFiles('*gradle.*') }}
        restore-keys: |
          ${{ runner.os }}-build-konan-

    - name: Install aarch64-linux-gnu-gcc
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Build binaries and assemble distribution
      run: make dist

    - name: Upload platform distribution
      uses: actions/upload-artifact@v4
      with:
        name: jaunch-${{ matrix.os }}
        path: jaunch.tar.gz

  test:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '21'
        cache: 'gradle'
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Cache the .cache folder
      id: cache-cache
      uses: actions/cache@v4
      with:
        path: .cache
        key: ${{ runner.os }}-dist-cache

    - name: Build demo apps
      run: make demo

    - name: Install prysk
      run: pip install prysk

    - name: Run the tests
      run: |
        cd test
        prysk *.t

  dist:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Cache the .cache folder
      id: cache-cache
      uses: actions/cache@v4
      with:
        path: .cache
        key: ${{ runner.os }}-dist-cache

    - name: Download platform distributions
      uses: actions/download-artifact@v4

    - name: Merge platform distributions
      run: |
        for tar in jaunch-*/jaunch.tar*; do tar xf "$tar"; done

    - name: Pack binaries and assemble distribution
      run: |
        bash bin/pack.sh
        bash -c "tar czf jaunch.tar.gz dist"

    - name: Upload merged distribution
      uses: actions/upload-artifact@v4
      with:
        name: jaunch
        path: jaunch.tar.gz
